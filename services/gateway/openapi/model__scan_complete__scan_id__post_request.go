/*
Database service API

REST API for interacting with the database service.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScanCompleteScanIdPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScanCompleteScanIdPostRequest{}

// ScanCompleteScanIdPostRequest struct for ScanCompleteScanIdPostRequest
type ScanCompleteScanIdPostRequest struct {
	Absences []Absences `json:"absences,omitempty"`
}

// NewScanCompleteScanIdPostRequest instantiates a new ScanCompleteScanIdPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScanCompleteScanIdPostRequest() *ScanCompleteScanIdPostRequest {
	this := ScanCompleteScanIdPostRequest{}
	return &this
}

// NewScanCompleteScanIdPostRequestWithDefaults instantiates a new ScanCompleteScanIdPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScanCompleteScanIdPostRequestWithDefaults() *ScanCompleteScanIdPostRequest {
	this := ScanCompleteScanIdPostRequest{}
	return &this
}

// GetAbsences returns the Absences field value if set, zero value otherwise.
func (o *ScanCompleteScanIdPostRequest) GetAbsences() []Absences {
	if o == nil || IsNil(o.Absences) {
		var ret []Absences
		return ret
	}
	return o.Absences
}

// GetAbsencesOk returns a tuple with the Absences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanCompleteScanIdPostRequest) GetAbsencesOk() ([]Absences, bool) {
	if o == nil || IsNil(o.Absences) {
		return nil, false
	}
	return o.Absences, true
}

// HasAbsences returns a boolean if a field has been set.
func (o *ScanCompleteScanIdPostRequest) HasAbsences() bool {
	if o != nil && !IsNil(o.Absences) {
		return true
	}

	return false
}

// SetAbsences gets a reference to the given []Absences and assigns it to the Absences field.
func (o *ScanCompleteScanIdPostRequest) SetAbsences(v []Absences) {
	o.Absences = v
}

func (o ScanCompleteScanIdPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScanCompleteScanIdPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Absences) {
		toSerialize["absences"] = o.Absences
	}
	return toSerialize, nil
}

type NullableScanCompleteScanIdPostRequest struct {
	value *ScanCompleteScanIdPostRequest
	isSet bool
}

func (v NullableScanCompleteScanIdPostRequest) Get() *ScanCompleteScanIdPostRequest {
	return v.value
}

func (v *NullableScanCompleteScanIdPostRequest) Set(val *ScanCompleteScanIdPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableScanCompleteScanIdPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableScanCompleteScanIdPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScanCompleteScanIdPostRequest(val *ScanCompleteScanIdPostRequest) *NullableScanCompleteScanIdPostRequest {
	return &NullableScanCompleteScanIdPostRequest{value: val, isSet: true}
}

func (v NullableScanCompleteScanIdPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScanCompleteScanIdPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


