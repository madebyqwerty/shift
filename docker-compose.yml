version: "3"
services:
  web:
    container_name: web
    build:
      context: ./
      dockerfile: apps/web/Dockerfile
    restart: always
    ports:
      - 5002:5002
    networks:
      - shift-infra

  database-service:
    container_name: database-service
    build: services/database/
    restart: always
    ports:
      - 5000:5000
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - shift-infra

  gateway:
    container_name: gateway
    build: services/gateway/
    restart: always
    ports:
      - 5003:5003
    networks:
      - shift-infra
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  ocr-service:
    container_name: ocr-service
    build: services/ocr/
    restart: always
    env_file: .env
    ports:
      - 5001:5001
    networks:
      - shift-infra
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  postgres:
    image: postgres:latest
    restart: always
    env_file: .env
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    ports:
      - 5432:5432
    volumes:
      - database_postgres:/var/lib/postgresql/data
    networks:
      - shift-infra
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - shift-infra
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3

networks:
  shift-infra:
    attachable: true
    name: shift-infra

volumes:
  database_postgres:
