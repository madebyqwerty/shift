/*
Database service API

REST API for interacting with the database service.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ScanPost200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ScanPost200Response{}

// ScanPost200Response struct for ScanPost200Response
type ScanPost200Response struct {
	// The id of the scan
	ScanId *string `json:"scan_id,omitempty"`
}

// NewScanPost200Response instantiates a new ScanPost200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewScanPost200Response() *ScanPost200Response {
	this := ScanPost200Response{}
	return &this
}

// NewScanPost200ResponseWithDefaults instantiates a new ScanPost200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewScanPost200ResponseWithDefaults() *ScanPost200Response {
	this := ScanPost200Response{}
	return &this
}

// GetScanId returns the ScanId field value if set, zero value otherwise.
func (o *ScanPost200Response) GetScanId() string {
	if o == nil || IsNil(o.ScanId) {
		var ret string
		return ret
	}
	return *o.ScanId
}

// GetScanIdOk returns a tuple with the ScanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ScanPost200Response) GetScanIdOk() (*string, bool) {
	if o == nil || IsNil(o.ScanId) {
		return nil, false
	}
	return o.ScanId, true
}

// HasScanId returns a boolean if a field has been set.
func (o *ScanPost200Response) HasScanId() bool {
	if o != nil && !IsNil(o.ScanId) {
		return true
	}

	return false
}

// SetScanId gets a reference to the given string and assigns it to the ScanId field.
func (o *ScanPost200Response) SetScanId(v string) {
	o.ScanId = &v
}

func (o ScanPost200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ScanPost200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ScanId) {
		toSerialize["scan_id"] = o.ScanId
	}
	return toSerialize, nil
}

type NullableScanPost200Response struct {
	value *ScanPost200Response
	isSet bool
}

func (v NullableScanPost200Response) Get() *ScanPost200Response {
	return v.value
}

func (v *NullableScanPost200Response) Set(val *ScanPost200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableScanPost200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableScanPost200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableScanPost200Response(val *ScanPost200Response) *NullableScanPost200Response {
	return &NullableScanPost200Response{value: val, isSet: true}
}

func (v NullableScanPost200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableScanPost200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


