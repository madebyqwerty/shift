/*
Database service API

REST API for interacting with the database service.

API version: 0.0.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ApiAbsenceScanScanIdGet200Response type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ApiAbsenceScanScanIdGet200Response{}

// ApiAbsenceScanScanIdGet200Response struct for ApiAbsenceScanScanIdGet200Response
type ApiAbsenceScanScanIdGet200Response struct {
	// The id of the absence scan.
	Id *string `json:"id,omitempty"`
	Absences []Absences `json:"absences,omitempty"`
}

// NewApiAbsenceScanScanIdGet200Response instantiates a new ApiAbsenceScanScanIdGet200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewApiAbsenceScanScanIdGet200Response() *ApiAbsenceScanScanIdGet200Response {
	this := ApiAbsenceScanScanIdGet200Response{}
	return &this
}

// NewApiAbsenceScanScanIdGet200ResponseWithDefaults instantiates a new ApiAbsenceScanScanIdGet200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewApiAbsenceScanScanIdGet200ResponseWithDefaults() *ApiAbsenceScanScanIdGet200Response {
	this := ApiAbsenceScanScanIdGet200Response{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ApiAbsenceScanScanIdGet200Response) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAbsenceScanScanIdGet200Response) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ApiAbsenceScanScanIdGet200Response) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ApiAbsenceScanScanIdGet200Response) SetId(v string) {
	o.Id = &v
}

// GetAbsences returns the Absences field value if set, zero value otherwise.
func (o *ApiAbsenceScanScanIdGet200Response) GetAbsences() []Absences {
	if o == nil || IsNil(o.Absences) {
		var ret []Absences
		return ret
	}
	return o.Absences
}

// GetAbsencesOk returns a tuple with the Absences field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ApiAbsenceScanScanIdGet200Response) GetAbsencesOk() ([]Absences, bool) {
	if o == nil || IsNil(o.Absences) {
		return nil, false
	}
	return o.Absences, true
}

// HasAbsences returns a boolean if a field has been set.
func (o *ApiAbsenceScanScanIdGet200Response) HasAbsences() bool {
	if o != nil && !IsNil(o.Absences) {
		return true
	}

	return false
}

// SetAbsences gets a reference to the given []Absences and assigns it to the Absences field.
func (o *ApiAbsenceScanScanIdGet200Response) SetAbsences(v []Absences) {
	o.Absences = v
}

func (o ApiAbsenceScanScanIdGet200Response) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ApiAbsenceScanScanIdGet200Response) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Absences) {
		toSerialize["absences"] = o.Absences
	}
	return toSerialize, nil
}

type NullableApiAbsenceScanScanIdGet200Response struct {
	value *ApiAbsenceScanScanIdGet200Response
	isSet bool
}

func (v NullableApiAbsenceScanScanIdGet200Response) Get() *ApiAbsenceScanScanIdGet200Response {
	return v.value
}

func (v *NullableApiAbsenceScanScanIdGet200Response) Set(val *ApiAbsenceScanScanIdGet200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableApiAbsenceScanScanIdGet200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableApiAbsenceScanScanIdGet200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiAbsenceScanScanIdGet200Response(val *ApiAbsenceScanScanIdGet200Response) *NullableApiAbsenceScanScanIdGet200Response {
	return &NullableApiAbsenceScanScanIdGet200Response{value: val, isSet: true}
}

func (v NullableApiAbsenceScanScanIdGet200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiAbsenceScanScanIdGet200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


