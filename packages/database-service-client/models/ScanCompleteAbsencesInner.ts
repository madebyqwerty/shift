/* tslint:disable */
/* eslint-disable */
/**
 * Database service API
 * REST API for interacting with the database service.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScanCompleteAbsencesInner
 */
export interface ScanCompleteAbsencesInner {
    /**
     * When the user has more than one hour of absence, every hour of his absence will be in this array with a user_id.
     * @type {string}
     * @memberof ScanCompleteAbsencesInner
     */
    userId?: string;
    /**
     * Only one hour of absence, if he has another hour it will be in another item in this list.
     * @type {number}
     * @memberof ScanCompleteAbsencesInner
     */
    absence?: number;
    /**
     * The date of the absence.
     * @type {Date}
     * @memberof ScanCompleteAbsencesInner
     */
    date?: Date;
}

/**
 * Check if a given object implements the ScanCompleteAbsencesInner interface.
 */
export function instanceOfScanCompleteAbsencesInner(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScanCompleteAbsencesInnerFromJSON(json: any): ScanCompleteAbsencesInner {
    return ScanCompleteAbsencesInnerFromJSONTyped(json, false);
}

export function ScanCompleteAbsencesInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScanCompleteAbsencesInner {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'userId': !exists(json, 'user_id') ? undefined : json['user_id'],
        'absence': !exists(json, 'absence') ? undefined : json['absence'],
        'date': !exists(json, 'date') ? undefined : (new Date(json['date'])),
    };
}

export function ScanCompleteAbsencesInnerToJSON(value?: ScanCompleteAbsencesInner | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'user_id': value.userId,
        'absence': value.absence,
        'date': value.date === undefined ? undefined : (value.date.toISOString().substring(0,10)),
    };
}

